openapi: "3.0.2"
info:
  title: Knowledge Portal Knowledgebase API
  contact:
    email: help@type2diabetesgenetics.org
    name: Dcc Team
    url: http://type2diabetesgenetics.org
  description: This is the REST service maintained by the Broad Institute's Type 2 Diabetes Research group
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
servers:
  - url: http://public.type2diabeteskb.org/dccservices
tags:
  - name: Variants by chromosome region and phenotype
  - name: Depict
  - name: eCaviar
  - name: GTEx
  - name: Knockout
  - name: LD score
  - name: Magma
  - name: Gregor
  - name: Meta Analysis
  - name: Phenotype list
  - name: Region
  - name: Tissue list
  - name: Variant prioritization
components:
  schemas:
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
        - code
        - message
    ResultVariant:
      properties:
        Consequence:
          type: string
        GENE:
          type: string
        P_VALUE:
          format: float
          type: number
        dataset:
          type: string
        phenotype:
          type: string
      required:
        - phenotype
    Variant:
      allOf:
        - $ref: '#/components/schemas/ResultVariant'
        - properties:
            VAR_ID:
              type: string
          required:
            - VAR_ID
    DepictGenePathwayPair:
      type: object
      required: [ pathway_id, phenotype, pathway_description, gene, pvalue, gene_list, dataset ]
      properties:
        pathway_id: { type: string }
        phenotype: { type: string }
        pathway_description: { type: string }
        gene: { type: string }
        pvalue: { type: number }
        gene_list:
          type: array
          items:
            type: string
        dataset: { type: string }
    DepictEffectorGene:
      type: object
      required: [ dataset, pheno, region_chr, region_start, region_end, gene, pvaluegene_ensemble_id ]
      properties:
        dataset: { type: string }
        pheno: { type: string }
        region_chr: { type: string }
        region_start: { type: integer }
        region_end": { type: integer }
        gene: { type: string }
        pvalue: { type: number }
        gene_ensemble_id: { type: string }
    DepictEnrichedTissue:
      type: object
      required: [
        dataset, phenotype, tissue, mesh_second_level_term, pvalue, tissue_name, tissue_uberon_id
      ]
      properties:
        dataset: { type: string }
        phenotype: { type: string }
        tissue: { type: string }
        mesh_second_level_term: { type: string }
        pvalue: { type: number }
        tissue_name: { type: string }
        tissue_uberon_id: { type: string }
    DepictGeneSet:
      type: object
      required: [ dataset, phenotype, pathway_id, pathway_description, pvalue ]
      properties:
        dataset: { type: string }
        phenotype: { type: string }
        pathway_id: { type: string }
        pathway_description: { type: string }
        pvalue: { type: number }
    EcaviarCredibleSet:
      type: object
      required: [
        dataset, phenotype, credible_set_id, chromosome, start_pos, end_pos, tissue, gene_ensemble_id,
        dbsnp_id, var_id, gwas_z_score, eqtl_z_score, prob_in_causal_set, clpp, gene
      ]
      properties:
        dataset: { type: string }
        phenotype: { type: string }
        credible_set_id: { type: string }
        chromosome: { type: string }
        start_pos: { type: integer }
        end_pos: { type: integer }
        tissue: { type: string }
        gene_ensemble_id: { type: string }
        dbsnp_id: { type: string }
        var_id: { type: string }
        gwas_z_score: { type: number }
        eqtl_z_score: { type: number }
        prob_in_causal_set: { type: number }
        clpp: { type: number }
        gene: { type: string }
    TissueGeneExpressions:
      type: object
      required: [ gene_ensemble_id, tissue, tstat, tissue_name, tissue_uberon_id, tissue_ensemble_id ]
      properties:
        gene_ensemble_id: { type: string }
        tissue: { type: string }
        tstat: { type: number }
        tissue_name: { type: string }
        tissue_uberon_id:
          type: string
          nullable: true
        tissue_ensemble_id:
          type: string
          nullable: true
    KnockoutPhenotype:
      type: object
      required: [
        Input, Input_Type, MGI_Gene_Marker_ID, Symbol, Name, Feature_Type, MP_ID, Term, Human_gene
      ]
      properties:
        Input: { type: string }
        Input_Type: { type: string }
        MGI_Gene_Marker_ID: { type: string }
        Symbol: { type: string }
        Name: { type: string }
        Feature_Type: { type: string }
        MP_ID: { type: string }
        Term: { type: string }
        Human_gene: { type: string }
    LdScoreEnrichedTissue:
      type: object
      required: [ tissue, phenotype, ancestry, coeff, stderr, pvalue, tissue_name, tissue_uberon_id ]
      properties:
        tissue: { type: string }
        phenotype: { type: string}
        ancestry: { type: string }
        coeff: { type: number }
        stderr: { type: number }
        pvalue: { type: string }
        tissue_name: { type: string, nullable: true }
        tissue_uberon_id: { type: string, nullable: true }
    MagmaAssociatedGene:
      type: object
      required: [ gene, phenotype, ancestry, nsnps, zstat, pvalue, gene_ensemble_id ]
      properties:
        gene: { type: string }
        phenotype: { type: string }
        ancestry: { type: string }
        nsnps: { type: integer }
        zstats: { type: number }
        pvalue: { type: number }
        gene_ensemble_id: { type: string }
    GregorAnnotations:
      type: object
      required: [
        phenotype, tissue_id, tissue, ancestry, p_value, in_beb_index_snp, expected_in_beb_index_snp,
        annotation
      ]
      properties:
        phenotype: { type: string }
        tissue_id: { type: string }
        tissue: { type: string }
        ancestry: { type: string }
        p_value: { type: number }
        in_beb_index_snp: { type: integer }
        expected_in_beb_index_snp: { type: number }
        annontation: { type: string }
    MetaAssociations:
      type: object
      required: [
        p_value, std_err, beta, number_samples, chrom, pos, ref, alt, phenotype, phenotype_group
      ]
      properties:
        p_value: { type: number }
        std_err: { type: number }
        beta: { type: number }
        number_samples: { type: integer }
        chrom: { type: string }
        pos: { type: integer }
        ref: { type: string }
        alt: { type: string }
        phenotype: { type: string }
        phenotype_group: { type: string }
    Phenotype:
      type: object
      required: [ group, phenotype_id, name, is_dichotomous ]
      properties:
        group: { type: string }
        phenotype_id: { type: string }
        name: { type: string }
        is_dichotomous: { type: boolean }
    RegionTissueAnnotation:
      type: object
      required: [ start, end, chrom, annotation, tissue_id, tissue_name ]
      properties:
        start: { type: integer }
        end: { type: integer }
        chrom: { type: string }
        annotation: { type: string }
        tissue_id: { type: string }
        tissue_name: { type: string }
    Tissue:
      type: object
      required: [ tissue_id, tissue ]
      properties:
        tissue_id: { type: string }
        tissue: { type: string }
    PrioritizationVariant:
      type: object
      required: [
        var_id, p_value, standard_error, beta, z_score, consequence, phenotype, impact,
        most_del_score
      ]
      properties:
        var_id: { type: string }
        p_value: { type: number }
        standard_error: { type: number }
        beta: { type: number }
        z_score: { type: number }
        consequence:
          type: array
          items: { type: string }
        phenotype: { type: string }
        impact: { type: string }
        most_del_score: { type: integer }
  parameters:
    gene:
      name: gene
      in: query
      required: true
      schema: { type: string }
      example: SLC30A8
    gene2:
      name: gene
      in: query
      required: true
      schema: { type: string }
      example: AARD
    genes:
      name: gene
      in: query
      required: false
      explode: false
      schema:
        type: array
        items: { type: string}
      example: [ PPARG, SLC30A8 ]
    genesRequired:
      name: gene
      in: query
      required: false
      explode: false
      schema:
        type: array
        items: { type: string}
      example: [ PPARG, SLC30A8 ]
    phenotype:
      name: phenotype
      in: query
      required: true
      schema: { type: string }
      example: T2D
    phenotype2:
      name: phenotype
      in: query
      required: true
      schema: { type: string }
      example: BMI
    phenotypes:
      name: phenotype
      in: query
      required: true
      explode: false
      schema:
        type: array
        items: { type: string }
      example: [ CHOL, BMI ]
    lt_value:
      name: lt_value
      in: query
      required: true
      schema: { type: number }
      example: 5.0E-4
    colocalization:
      name: colocalization
      in: path
      required: true
      schema:
        type: string
        enum: ["colocalization", "colocalization_max"]
      example: "_max"
    limit:
      name: limit
      in: query
      required: false
      schema: { type: integer }
      example: 10
    var_id:
      name: var_id
      in: query
      required: true
      schema: { type: string }
      example: 8_118184783_C_T
    var_ids:
      name: var_id
      in: query
      required: true
      explode: false
      schema:
        type: array
        items: { type: string }
      example: [ 1_713337_G_A, 1_713754_G_C, 1_713754_G_C ]
    tissue:
      name: tissue
      in: query
      required: false
      schema: { type: string }
    annotation:
      name: annotation
      in: query
      required: false
      schema: { type: string }
    chrom:
      name: chrom
      in: query
      required: true
      schema: { type: string }
      example: "8"
    start_pos:
      name: start_pos
      in: query
      required: true
      schema: { type: integer }
      example: 117862462
    end_pos:
      name: end_pos
      in: query
      required: true
      schema: { type: integer }
      example: 118289003
paths:
  /getAggregatedDataSimple:
    get:
      tags: [ "Variants by chromosome region and phenotype" ]
      description: >
        retrieve variants based on chromosome region and phenotype (examples: T2D,
        BMI, FG, FI, TG, LDL, HDL, WHR, 2hrI, HIPC, CKD, CAD, HEIGHT, WAIST)
      operationId: findVariants
      parameters:
        - description: start of the chrom region
          in: query
          name: start
          required: true
          schema:
            format: int32
            type: integer
        - description: end of the chrom region
          in: query
          name: end
          required: true
          schema:
            format: int32
            type: integer
        - description: chromosome
          in: query
          name: chrom
          required: true
          schema:
            type: string
        - description: phenotype
          in: query
          name: phenotype
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Variant'
                type: array
          description: variant response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: retrieve variants based on chromosome region and phenotype
  /testcalls/depict/genepathway/array:
    summary: >
      Fetch gene sets containing the gene that are enriched (at a specified level of significance) for associations
      with a specified disease, according to the DEPICT method.
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
        - { "$ref": "#/components/parameters/phenotype" }
        - { "$ref": "#/components/parameters/lt_value" }
      responses:
        default:
          description: >
            The predicted gene/pathway pairs, and significance, as well as other genes in the pathway.
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: string
  /testcalls/depict/genepathway/object:
    summary: >
      Fetch gene sets containing the gene that are enriched (at a specified level of significance) for associations
      with a specified disease, according to the DEPICT method.
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
        - { "$ref": "#/components/parameters/phenotype" }
        - { "$ref": "#/components/parameters/lt_value" }
      responses:
        default:
          description: >
            The predicted gene/pathway pairs, and significance, as well as other genes in the pathway.
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/DepictGenePathwayPair"}
              example:
                data:
                  - pathway_id: GO:0015833
                    phenotype: T2D
                    pathway_description: peptide transport
                    gene: SLC30A8
                    pvalue: 0.000293383
                    gene_list: [
                      AACS, ABCA1, ABCB9, ABCC8, ACVR1C, TCF7L2, TFAP2B, TNF, TRH, TRPV1, TRPV4, UCN3, UTS2, VAMP2,
                      VGF
                    ]
                    dataset: GWAS_DIAMANTE_eu_dv2__T2D
                  - pathway_id: GO:0042803
                    phenotype: T2D
                    pathway_description: protein homodimerization activity
                    gene: SLC30A8
                    pvalue: 0.000415999
                    gene_list: [ AADAT,  ABAT, YARS2,  ZBTB16, ZBTB7B, ZNF174, ZNF423 ]
                    dataset: GWAS_DIAMANTE_eu_dv2__T2D
                  - pathway_id: MP:0005293
                    phenotype: T2D
                    pathway_description: impaired glucose tolerance
                    gene: SLC30A8
                    pvalue: 0.000213059
                    gene_list: [
                      ABCC8, ACADVL, ADCYAP1R1, ADIPOQ, ADIPOR1, ADIPOR2, TBC1D4, TGM2, THRA, UNC13A, VIPR1, WFS1,
                      ZEB1
                    ]
                    dataset: GWAS_DIAMANTE_eu_dv2__T2D
  /testcalls/depict/region/array:
    summary: >
      Fetch effector gene predictions for a specified trait within a region, according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: p-value for association of a gene with a phenotype
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: string
  /testcalls/depict/region/object:
    summary: >
      Fetch effector gene predictions for a specified trait within a region, according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: p-value for association of a gene with a phenotype
          content:
            application/json:
              schema:
                type: array
                items: { "$ref": "#/components/schemas/DepictEffectorGene" }
              example:
                - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                  pheno: T2D
                  region_chr: "8"
                  region_start: 117962512
                  region_end: 118188953
                  gene: SLC30A8
                  pvalue: 0.000945569
                  gene_ensemble_id: ENSG00000164756
  /testcalls/depict/tissue/array:
    summary: Fetch tissues enriched for associations with a specified disease, according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype2" }
      responses:
        default:
          description: A list of enriched tissues and p-values
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: string
  /testcalls/depict/tissue/object:
    summary: Fetch tissues enriched for associations with a specified disease, according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype2" }
      responses:
        default:
          description: A list of enriched tissues and p-values
          content:
            application/json:
              schema:
                type: array
                items: { "$ref": "#/components/schemas/DepictEnrichedTissue" }
              example:
                - dataset: GWAS_GIANT_active_dv4__BMI
                  phenotype: BMI
                  tissue: Serum
                  mesh_second_level_term: Hemic and Immune Systems
                  pvalue: 0.0136876
                  tissue_name: serum
                  tissue_uberon_id: ""
                - dataset: GWAS_GIANT_active_dv4__BMI
                  phenotype: BMI
                  tissue: Parietal Lobe
                  mesh_second_level_term: Nervous System
                  pvalue: 0.0297425
                  tissue_name: parietal lobe
                  tissue_uberon_id: ""
  /testcalls/depict/pathway/array:
    summary: >
      Fetch gene sets enriched (at a specified level of significance) for associations with a specified disease,
      according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: A list of enriched gene sets and their p-values
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 5
                    maxItems: 5
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 5
                    maxItems: 5
                    items:
                      type: string
  /testcalls/depict/pathway/object:
    summary: >
      Fetch gene sets enriched (at a specified level of significance) for associations with a specified disease,
      according to the DEPICT method
    get:
      tags: [ Depict ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: A list of enriched gene sets and their p-values
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/DepictGeneSet" }
              example:
                data:
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    pathway_id: KEGG_PROSTATE_CANCER
                    pathway_description: KEGG_PROSTATE_CANCER
                    pvalue: 5.77832e-7
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    pathway_id: MP:0001698
                    pathway_description: decreased embryo size
                    pvalue: 7.56071e-7
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    pathway_id: KEGG_ACUTE_MYELOID_LEUKEMIA
                    pathway_description: KEGG_ACUTE_MYELOID_LEUKEMIA
                    pvalue: 9.97704e-7
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    pathway_id: ENSG00000105221
                    pathway_description: AKT2 subnetwork
                    pvalue: 0.00000114015
  /testcalls/ecaviar/{colocalization}/array:
    summary: "Note: to get eCaviar use colocalization_expanded_max, while to get Coloc use colocalization_max."
    get:
      tags: [eCaviar]
      parameters:
        - { "$ref": "#/components/parameters/colocalization"}
        - { "$ref": "#/components/parameters/gene2"}
        - { "$ref": "#/components/parameters/phenotype"}
      responses:
        default:
          description: dataset/phenotype/credible set variant scores
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 15
                    maxItems: 15
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 15
                    maxItems: 15
                    items:
                      type: string
  /testcalls/ecaviar/{colocalization}/object:
    summary: "Note: to get eCaviar use colocalization_expanded_max, while to get Coloc use colocalization_max."
    get:
      tags: [eCaviar]
      parameters:
        - { "$ref": "#/components/parameters/colocalization"}
        - { "$ref": "#/components/parameters/gene2"}
        - { "$ref": "#/components/parameters/phenotype"}
      responses:
        default:
          description: dataset/phenotype/credible set variant scores
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/EcaviarCredibleSet" }
              example:
                data:
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    credible_set_id: 8_118185025_G_A
                    chromosome: "8"
                    start_pos: 117935025
                    end_pos: 118435025
                    tissue: Brain_Cortex
                    gene_ensemble_id: ENSG00000205002
                    dbsnp_id: rs4629901
                    var_id: 8_117955005_C_T
                    gwas_z_score: 0.568
                    eqtl_z_score: 4.46
                    prob_in_causal_set: 0.516423
                    clpp: 0.00449802
                    gene: AARD
                  - dataset: GWAS_DIAMANTE_eu_dv2__T2D
                    phenotype: T2D
                    credible_set_id: 8_118185025_G_A
                    chromosome: "8"
                    start_pos: 117935025
                    end_pos: 118435025
                    tissue: Thyroid,
                    gene_ensemble_id: ENSG00000205002
                    dbsnp_id: rs3020180
                    var_id: 8_117949756_G_A
                    gwas_z_score: 0.896
                    eqtl_z_score: 4.42
                    prob_in_causal_set: 0.208669
                    clpp: 0.00113929
                    gene: AARD
  /testcalls/gtex/gene_weight/array:
    summary: Returns gene/tissue expression data
    get:
      tags: [ GTEx ]
      parameters:
        - { "$ref": "#/components/parameters/genesRequired" }
      responses:
        default:
          description: Returns gene/tissue expression data
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 5
                    maxItems: 5
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 5
                    maxItems: 5
                    items:
                      type: string
  /testcalls/gtex/gene_weight/object:
    summary: Returns gene/tissue expression data
    get:
      tags: [ GTEx ]
      parameters:
        - { "$ref": "#/components/parameters/genesRequired" }
      responses:
        default:
          description: Returns gene/tissue expression data
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/TissueGeneExpressions" }
              example:
                - gene_ensemble_id: ENSG00000132170
                  tissue: Adipose_Subcutaneous
                  tstat: 84.7512065083
                  gene: PPARG
                  tissue_name: subcutaneous adipose tissue
                  tissue_uberon_id: UBERON:0002190
                - gene_ensemble_id: ENSG00000132170
                  tissue: Adipose_Visceral_(Omentum)
                  tstat: 66.509654581
                  gene: PPARG
                  tissue_name: null
                  tissue_uberon_id: null
                - gene_ensemble_id: ENSG00000132170
                  tissue: Adrenal_Gland
                  tstat: -4.63304009523
                  gene: PPARG
                  tissue_name: adrenal gland
                  tissue_uberon_id: UBERON:0002369
                - gene_ensemble_id: ENSG00000132170
                  tissue: Artery_Aorta
                  tstat: -5.49795590039
                  gene: PPARG
                  tissue_name: aorta
                  tissue_uberon_id: UBERON:0000947
                - gene_ensemble_id: ENSG00000132170
                  tissue: Artery_Coronary
                  tstat: 0.414921182179
                  gene: PPARG
                  tissue_name: coronary artery
                  tissue_uberon_id: UBERON:0001621
  /testcalls/knockout/array:
    summary: Fetch a list of mouse phenotypes (from MGI database) associated with the gene
    get:
      tags: [ Knockout ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
      responses:
        default:
          description: A list of phenotype ids and descriptions
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 9
                    maxItems: 9
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 9
                    maxItems: 9
                    items:
                      type: string
  /testcalls/knockout/object:
    summary: Fetch a list of mouse phenotypes (from MGI database) associated with the gene
    get:
      tags: [ Knockout ]
      parameters:
        - { "$ref": "#/components/parameters/gene" }
      responses:
        default:
          description: A list of phenotype ids and descriptions
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/KnockoutPhenotype" }
              example:
                data:
                  - Input: MGI:2442682
                    Input_Type: MGI
                    MGI_Gene_Marker_ID: MGI:2442682
                    Symbol: Slc30a8
                    Name: solute carrier family 30 (zinc transporter), member 8
                    Feature_Type: protein coding gene
                    MP_ID: MP:0003839
                    Term: abnormal insulin clearance
                    Human_gene: SLC30A8
                  - Input: MGI:2442682
                    Input_Type: MGI
                    MGI_Gene_Marker_ID: MGI:2442682
                    Symbol: Slc30a8
                    Name: solute carrier family 30 (zinc transporter), member 8
                    Feature_Type: protein coding gene
                    MP_ID: MP:0005217
                    Term: abnormal pancreatic beta cell morphology
                    Human_gene: SLC30A8
                  - Input: MGI:2442682
                    Input_Type: MGI
                    MGI_Gene_Marker_ID: MGI:2442682
                    Symbol: Slc30a8
                    Name: solute carrier family 30 (zinc transporter), member 8
                    Feature_Type: protein coding gene
                    MP_ID: MP:0005370
                    Term: liver/biliary system phenotype
                    Human_gene: SLC30A8
  /testcalls/ldscore/tissue/array:
    summary: Fetch the tissues enriched for disease associations, according to LD-score regression
    get:
      tags: [ "LD score" ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: A list of enriched tissues, their effect sizes, and p-values.
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: string
  /testcalls/ldscore/tissue/object:
    summary: Fetch the tissues enriched for disease associations, according to LD-score regression
    get:
      tags: [ "LD score" ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
      responses:
        default:
          description: A list of enriched tissues, their effect sizes, and p-values.
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/LdScoreEnrichedTissue" }
              example:
                data:
                  - tissue: Pancreas
                    phenotype: T2D
                    ancestry: European
                    coeff: 3.07894147039e-9
                    stderr: 9.55106227263e-10
                    pvalue: 0.000632809231879
                    tissue_name: pancreas
                    tissue_uberon_id: UBERON:0001264
                  - tissue: A10.615.550.Mucous.Membrane
                    phenotype: T2D
                    ancestry: European
                    coeff: -3.01805041521e-9
                    stderr: 9.24799138468e-10
                    pvalue: 0.999449707782
                    tissue_name: null
                    tissue_uberon_id: null
                  - tissue: Lung
                    phenotype: T2D
                    ancestry: European
                    coeff: -2.98325557297e-9
                    stderr: 7.12606248356e-10
                    pvalue: 0.999985829382
                    tissue_name: lung
                    tissue_uberon_id: UBERON:0002048
  /testcalls/magma/gene/array:
    summary: Fetch gene-level association results for a trait(s), according to MAGMA
    get:
      tags: [ Magma ]
      parameters:
        - { "$ref": "#/components/parameters/phenotypes" }
        - { "$ref": "#/components/parameters/genes" }
      responses:
        default:
          description: A list of associated genes and their p-values
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 7
                    maxItems: 7
                    items:
                      type: string
  /testcalls/magma/gene/object:
    summary: Fetch gene-level association results for a trait(s), according to MAGMA
    get:
      tags: [ Magma ]
      parameters:
        - { "$ref": "#/components/parameters/phenotypes" }
        - { "$ref": "#/components/parameters/genes" }
      responses:
        default:
          description: A list of associated genes and their p-values
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/MagmaAssociatedGene" }
              example:
                data:
                  - gene: PPARG
                    phenotype: CHOL
                    ancestry: Mixed
                    nsnps: 306
                    zstat: 7.0971
                    pvalue: 6.3691e-13
                    gene_ensemble_id: ENSG00000132170
                  - gene: PPARG
                    phenotype: BMI
                    ancestry: Mixed
                    nsnps: 215
                    zstat: 6.5613
                    pvalue: 2.6662e-11
                    gene_ensemble_id: ENSG00000132170
                  - gene: SLC30A8
                    phenotype: CHOL
                    ancestry: Mixed
                    nsnps: 343
                    zstat: -0.6555
                    pvalue: 0.74393
                    gene_ensemble_id: ENSG00000164756
                  - gene: SLC30A8
                    phenotype: BMI
                    ancestry: Mixed
                    nsnps: 320
                    zstat: 1.7614
                    pvalue: 0.039087
                    gene_ensemble_id: ENSG00000164756
  /graph/gregor/phenotype/array:
    summary: Fetch annotations enriched for trait associations, according to the GREGOR method
    get:
      tags: [ Gregor ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: A list of annotations (tissue and name) as well as their enrichment p-values and effect sizes
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 8
                    maxItems: 8
                    items:
                      type: string
  /graph/gregor/phenotype/object:
    summary: Fetch annotations enriched for trait associations, according to the GREGOR method
    get:
      tags: [ Gregor ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: A list of annotations (tissue and name) as well as their enrichment p-values and effect sizes
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/GregorAnnotations" }
              example:
                data:
                  - phenotype: T2D
                    tissue_id: UBERON:0000006
                    tissue: islet of Langerhans
                    ancestry: EU
                    p_value: 4.25849932680315e-20
                    in_beb_index_snp: 125
                    expected_in_beb_index_snp: 63.0121375000542
                    annotation: Enhancer_Active_1
                  - phenotype: T2D
                    tissue_id: UBERON:0014455
                    tissue: subcutaneous adipose
                    ancestry: AA
                    p_value: 1.29739077991975
                    in_beb_index_snp: 1
                    expected_in_beb_index_snp: 0.0304601425793908
                    annotation: Enhancer_Active_1
                  - phenotype: T2D
                    tissue_id: UBERON:0000006
                    tissue: islet of Langerhans
                    ancestry: HS
                    p_value: 1.73801915928969
                    in_beb_index_snp: 4
                    expected_in_beb_index_snp: 3.95384449839974
                    annotation: Quiescent-low
  /graph/meta/variant/array:
    summary: >
      Return the “bottom-line’ p-value for a variant, as calculated by the AMP-T2D Knowledge Portal’s analysis
      platform
    get:
      tags: [ "Meta Analysis" ]
      parameters:
        - { "$ref": "#/components/parameters/var_id" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: the bottom line p-value and effect size for each trait
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 10
                    maxItems: 10
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 10
                    maxItems: 10
                    items:
                      type: string
  /graph/meta/variant/object:
    summary: >
      Return the “bottom-line’ p-value for a variant, as calculated by the AMP-T2D Knowledge Portal’s analysis
      platform
    get:
      tags: [ "Meta Analysis" ]
      parameters:
        - { "$ref": "#/components/parameters/var_id" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: the bottom line p-value and effect size for each trait
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/MetaAssociations" }
              example:
                data:
                  - p_value: 4.911e-80
                    std_err: 0.0033
                    beta: -0.107
                    number_samples: 2247110
                    chrom: "8"
                    pos: 118184783
                    ref: C
                    alt: T
                    phenotype: T2D
                    phenotype_group: GLYCEMIC
                  - p_value: 2.624e-63
                    std_err: 0.0047
                    beta: -0.1077
                    number_samples: 1181250
                    chrom: "8"
                    pos: 118184783
                    ref: C
                    alt: T
                    phenotype: T2DadjBMI
                    phenotype_group: GLYCEMIC
                  - p_value: 0.9961
                    std_err: 0.0414
                    beta: -0.0002
                    number_samples: 1797
                    chrom: "8"
                    pos: 118184783
                    ref: C
                    alt: T
                    phenotype: FGadjAgeSex
                    phenotype_group: GLYCEMIC
  /graph/phenotype/list/array:
    summary: Returns the list of phenotypes from the database
    get:
      tags: [ "Phenotype list" ]
      parameters: []
      responses:
        default:
          description: Returns the list of phenotypes from the database
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 4
                    maxItems: 4
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 4
                    maxItems: 4
                    items:
                      type: string
  /graph/phenotype/list/object:
    summary: Returns the list of phenotypes from the database
    get:
      tags: [ "Phenotype list" ]
      parameters: []
      responses:
        default:
          description: Returns the list of phenotypes from the database
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/Phenotype" }
              example:
                data:
                  - group: GLYCEMIC
                    phenotype_id: 2hrCPEP
                    name: Two-hour C-peptide
                    is_dichotomous: false
                  - group: LIPIDS
                    phenotype_id: 2hrFFA
                    name: 2hr plasma free fatty acids
                    is_dichotomous: false
                  - group: ISCHEMIC STROKE
                    phenotype_id: toastUNDETER
                    name: TOAST other undetermined
                    is_dichotomous: true
  /graph/region/variant/array:
    summary: Returns region/tissue annotations given a variant
    get:
      tags: [ Region ]
      parameters:
        - { "$ref": "#/components/parameters/var_ids" }
        - { "$ref": "#/components/parameters/tissue" }
        - { "$ref": "#/components/parameters/annotation" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: Returns region/tissue annotations given a variant
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 6
                    maxItems: 6
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 6
                    maxItems: 6
                    items:
                      type: string
  /graph/region/variant/object:
    summary: Returns region/tissue annotations given a variant
    get:
      tags: [ Region ]
      parameters:
        - { "$ref": "#/components/parameters/var_ids" }
        - { "$ref": "#/components/parameters/tissue" }
        - { "$ref": "#/components/parameters/annotation" }
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: Returns region/tissue annotations given a variant
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/RegionTissueAnnotation" }
              example:
                data:
                  - start: 761400
                    end: 761800
                    chrom: "1"
                    annotation: Transcription_Weak
                    tissue_id: UBERON:0018112
                    tissue_name: rectal smooth muscle
                  - start: 714600
                    end: 715200
                    chrom: "1"
                    annotation: Promoter_Weak
                    tissue_id: UBERON:0018112
                    tissue_name: rectal smooth muscle
                  - start: 714600
                    end: 715200
                    chrom: "1"
                    annotation: Promoter_Weak
                    tissue_id: CL:0002553
                    tissue_name: fibroblast of lung
  /graph/tissue/list/array:
    summary: Returns the list of tissues from the database
    get:
      tags: [ "Tissue list" ]
      parameters: []
      responses:
        default:
          description: Returns the list of tissues from the database
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      type: string
  /graph/tissue/list/object:
    summary: Returns the list of tissues from the database
    get:
      tags: [ "Tissue list" ]
      parameters: []
      responses:
        default:
          description: Returns the list of tissues from the database
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/Tissue" }
              example:
                data:
                  - tissue_id: CL:0000136
                    tissue: adipocyte
                  - tissue_id: EFO:0001187
                    tissue: HepG2
                  - tissue_id: UBERON:0018112
                    tissue: rectal smooth muscle
  /graph/prioritization/variant/array:
    summary: Returns all variants linked to phenotypes with their pValues in the given region
    get:
      tags: [ "Variant prioritization" ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype"}
        - { "$ref": "#/components/parameters/chrom"}
        - { "$ref": "#/components/parameters/start_pos"}
        - { "$ref": "#/components/parameters/end_pos"}
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: Returns all variants linked to phenotypes with their pValues in the given region
          content:
            application/json:
              schema:
                type: object
                required: [ data, header ]
                properties:
                  data:
                    type: array
                    minItems: 9
                    maxItems: 9
                    items:
                      type: array
                      items: {}
                  header:
                    type: array
                    minItems: 9
                    maxItems: 9
                    items:
                      type: string
  /graph/prioritization/variant/object:
    summary: Returns all variants linked to phenotypes with their pValues in the given region
    get:
      tags: [ "Variant prioritization" ]
      parameters:
        - { "$ref": "#/components/parameters/phenotype"}
        - { "$ref": "#/components/parameters/chrom"}
        - { "$ref": "#/components/parameters/start_pos"}
        - { "$ref": "#/components/parameters/end_pos"}
        - { "$ref": "#/components/parameters/limit" }
      responses:
        default:
          description: Returns all variants linked to phenotypes with their pValues in the given region
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items: { "$ref": "#/components/schemas/PrioritizationVariant" }
              example:
                data:
                  - var_id: 8_118185025_G_A
                    p_value: 9.71e-121
                    standard_error: 0.0033
                    beta: -0.1075
                    z_score: -23.365
                    consequence: [ 3_prime_UTR_variant ]
                    phenotype: T2D
                    impact: MODIFIER
                    most_del_score: 4
                  - var_id: 8_118185733_A_G
                    p_value: 8.96e-117
                    standard_error: 0.0033
                    beta: -0.1052
                    z_score: -22.972
                    consequence: [ 3_prime_UTR_variant ]
                    phenotype: T2D
                    impact: MODIFIER
                    most_del_score: 4
                  - var_id: 8_118185938_A_G
                    p_value: 4.255e-18
                    standard_error: 0.0035
                    beta": 0.051
                    z_score: 8.672
                    consequence: [ 3_prime_UTR_variant ]
                    phenotype: T2D
                    impact: MODIFIER
                    most_del_score: 4
